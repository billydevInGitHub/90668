Runnable runnableTask = () -> {
    try {
        TimeUnit.MILLISECONDS.sleep(300);
    } catch (InterruptedException e) {
        e.printStackTrace();
    }
};

executorService.execute(runnableTask);
   # The execute() method is void and doesn’t give any possibility to get the result of a task’s execution or
     to check the task’s status (is it running):
         # runnable can also use submit() method
              Future<?>	submit(Runnable task)
              Submits a Runnable task for execution and returns a Future representing that task.
                      # this might return any type of Future
              <T> Future<T>	submit(Runnable task, T result)
              Submits a Runnable task for execution and returns a Future representing that task.
                      # this will return a generic future
   # from: https://www.baeldung.com/java-executor-service-tutorial
